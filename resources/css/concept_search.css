#data-visualization {
    overflow: hidden;
}

#data-visualization * {
    margin: 0;
    padding: 0;
}

/*Tree structure obtained from https://codepen.io/Pestov/pen/BLpgm*/
#data-visualization .tree ul {
    padding-top: 20px;
    position: relative;
    transition: all 0.5s;
    -webkit-transition: all 0.5s;
    -moz-transition: all 0.5s;
}

#data-visualization .tree li {
    float: left;
    text-align: center;
    list-style-type: none;
    position: relative;
    padding: 20px 5px 0 5px;
    transition: all 0.5s;
    -webkit-transition: all 0.5s;
    -moz-transition: all 0.5s;
}


/*We will use ::before and ::after to draw the connectors*/

#data-visualization .tree li::before,
#data-visualization .tree li::after {
    content: '';
    position: absolute;
    top: 0;
    right: 50%;
    border-top: 1px solid #ccc;
    width: 50%;
    height: 20px;
}

#data-visualization .tree li::after {
    right: auto;
    left: 50%;
    border-left: 1px solid #ccc;
}


/*We need to remove left-right connectors from elements without 
any siblings*/

#data-visualization .tree li:only-child::after,
#data-visualization .tree li:only-child::before {
    display: none;
}


/*Remove space from the top of single children*/

#data-visualization .tree li:only-child {
    padding-top: 0;
}


/*Remove left connector from first child and 
right connector from last child*/

#data-visualization .tree li:first-child::before,
#data-visualization .tree li:last-child::after {
    border: 0 none;
}


/*Adding back the vertical connector to the last nodes*/

#data-visualization .tree li:last-child::before {
    border-right: 1px solid #ccc;
    border-radius: 0 5px 0 0;
    -webkit-border-radius: 0 5px 0 0;
    -moz-border-radius: 0 5px 0 0;
}

#data-visualization .tree li:first-child::after {
    border-radius: 5px 0 0 0;
    -webkit-border-radius: 5px 0 0 0;
    -moz-border-radius: 5px 0 0 0;
}


/*Time to add downward connectors from parents*/

#data-visualization .tree ul ul::before {
    content: '';
    position: absolute;
    top: 0;
    left: 50%;
    border-left: 1px solid #ccc;
    width: 0;
    height: 20px;
}

#data-visualization .tree ul ul:first-of-type::before {
    left: 50.5%;
}

#data-visualization .tree>ul>li>ul>li>ul:first-of-type::before {
    left: 50.5%;
}

#data-visualization .tree>ul>li>ul>li:nth-of-type(2)>ul::before {
    left: 50%;
}

#data-visualization .tree>ul>li>ul>li:nth-of-type(3)>ul::before {
    left: 47.5%;
}


#data-visualization .tree li a {
    border: 1px solid #ccc;
    padding: 5px 10px;
    text-decoration: none;
    color: #666;
    font-family: arial, verdana, tahoma;
    font-size: 11px;
    display: inline-block;
    border-radius: 5px;
    -webkit-border-radius: 5px;
    -moz-border-radius: 5px;
    transition: all 0.5s;
    -webkit-transition: all 0.5s;
    -moz-transition: all 0.5s;
}


/*Time for some hover effects*/


/*We will apply the hover effect the the lineage of the element also*/

#data-visualization .tree li a:hover,
#data-visualization .tree li a:hover+ul li a {
    background: #c8e4f8;
    color: #000;
    border: 1px solid #94a0b4;
}


/*Connector styles on hover*/

#data-visualization .tree li a:hover+ul li::after,
#data-visualization .tree li a:hover+ul li::before,
#data-visualization .tree li a:hover+ul::before,
#data-visualization .tree li a:hover+ul ul::before {
    border-color: #94a0b4;
}